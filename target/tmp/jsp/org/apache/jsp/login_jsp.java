/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.16.v20190411
 * Generated at: 2019-04-23 13:01:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/../common.jsp", Long.valueOf(1555934466112L));
    _jspx_dependants.put("jar:file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
    _jspx_dependants.put("file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1555218603255L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write(" \n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/layui.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/login.css\">\n");
      out.write("    <link rel=\"icon\" href=\"/favicon.ico\">\n");
      out.write("    <title>管理后台</title>\n");
      out.write("    <style>\n");
      out.write("       h4{\n");
      out.write("         width:100%;\n");
      out.write("         text-align:center;\n");
      out.write("       }\n");
      out.write("       .login-form .input-group .input-field{\n");
      out.write("         width:80%;\n");
      out.write("         display:inline-block;\n");
      out.write("       }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body class=\"login-wrap\">\n");
      out.write("    <div class=\"login-container\">\n");
      out.write("        <form class=\"login-form layui-form\"  action=\"\">\n");
      out.write("            <h4>管理后台</h4>\n");
      out.write("            <div class=\"layui-form-item\">\n");
      out.write("                <div class=\"input-group\">\n");
      out.write("                    <span class=\"label-title\">用户名</span>\n");
      out.write("                    <input type=\"text\" id=\"username\" name=\"username\" lay-verify=\"userName\" value=\"admin\" class=\"input-field\">\n");
      out.write("                   \n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("          \n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <span class=\"label-title\">密码</span>\n");
      out.write("                <input type=\"password\" name=\"password\" value=\"admin\"  id=\"password\" lay-verify=\"pass\" class=\"input-field\">\n");
      out.write("            </div>\n");
      out.write("           \n");
      out.write("            <a href=\"");
      out.print(basePath);
      out.write("index.jsp\">\n");
      out.write("               <button type=\"button\" class=\"login-button\" lay-submit=\"\" lay-filter=\"login\">登录<i class=\"ai ai-enter\"></i></button>\n");
      out.write("            </a>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("assets/layui.js\"></script>\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("/js/login.js\"></script>\n");
      out.write("<!--  <script>\n");
      out.write("\t  layui.use(['form'], function(){\n");
      out.write("      var form = layui.form\n");
      out.write("      ,layer = layui.layer\n");
      out.write("      ,$ = layui.$\n");
      out.write("      //自定义验证规则\n");
      out.write("      form.verify({\n");
      out.write("        userName: function(value){\n");
      out.write("          if(value.length < 3){\n");
      out.write("            return '用户名至少得3个字符啊';\n");
      out.write("          }\n");
      out.write("        },\n");
      out.write("        city:function(value){\n");
      out.write("          if(!value.length){\n");
      out.write("            return '请选择站点';\n");
      out.write("          }\n");
      out.write("         }\n");
      out.write("        ,pass: [\n");
      out.write("          /^[\\S]{6,12}$/\n");
      out.write("          ,'密码必须6到12位，且不能出现空格'\n");
      out.write("        ]\n");
      out.write("      });*/\n");
      out.write("  \n");
      out.write("   \n");
      out.write("     \n");
      out.write("      //监听提交\n");
      out.write("     form.on('submit(login)', function(data){\n");
      out.write("    \t  data.field.cid = + data.field.cid\n");
      out.write("    \t  $.ajax({\n");
      out.write("            url:\"");
      out.print(basePath);
      out.write("user/login\",\n");
      out.write("            type:'post',//method请求方式，get或者post\n");
      out.write("            dataType:'json',//预期服务器返回的数据类型\n");
      out.write("            data:JSON.stringify(data.field),//表格数据序列化\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\n");
      out.write("            success:function(res){//res为相应体,function为回调函数\n");
      out.write("              if(res.success){\n");
      out.write("                layer.alert(res.message,{icon:1});\n");
      out.write("                 location.href=\"");
      out.print(basePath);
      out.write("index.jsp\";\n");
      out.write("              \n");
      out.write("              }else{\n");
      out.write("                layer.alert(res.message,{icon: 5});\n");
      out.write("              }\n");
      out.write("           },\n");
      out.write("           error:function(){\n");
      out.write("            layer.alert('操作失败！！！',{icon:5});\n");
      out.write("          }\n");
      out.write("        });\n");
      out.write("       \n");
      out.write("        return false;\n");
      out.write("      });\n");
      out.write("     });\n");
      out.write("   \n");
      out.write("    </script>-->\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
